---
#################
# DO NOT MODIFY #
#################

Description: Self Service for AWS drorchestrator CI/CD Automation Pipeline
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  PipelineName:
    Description: Name of the DR orchestrator pipeline
    Type: String
    Default: dr-orchestrator-pipeline
  Tag1:
    Description: Application Name
    Type: String
    Default: Value1
  Tag2:
    Description: Application Name
    Type: String
    Default: Value2
  Tag3:
    Description: Email ID of the owning team
    Type: String
    Default: Value3

Resources:
  # Role for the pipeline
  # KMS keys
  ProductPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName # Update with the name of the pipeline
      ArtifactStore:
        Type: S3
        Location: "{{resolve:ssm:/drorchestrator/baseline/bucket}}"
        EncryptionKey:
          Id: "{{resolve:ssm:/drorchestrator/baseline/kms-arn}}"
          Type: "KMS"
      RoleArn: "{{resolve:ssm:/drorchestrator/baseline/code-pipeline-role-arn}}"
      RestartExecutionOnUpdate: True
      Stages:
        - Name: CodeCommit-Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              Configuration:
                RepositoryName: "{{resolve:ssm:/drorchestrator/baseline/codecommit-repository}}"
                BranchName: main
              OutputArtifacts:
                - Name: SourceArtifacts

        - Name: Apply-CodeBuild-Updates
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: Update_Pipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: "{{resolve:ssm:/drorchestrator/baseline/codebuild-stackname}}"
                RoleArn: "{{resolve:ssm:/drorchestrator/baseline/cloudformation-role-arn}}"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: SourceArtifacts::src/baseline/codebuild.yaml
              RunOrder: 1

        - Name: Apply-Pipeline-Changes
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: Update_Pipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref AWS::StackName
                RoleArn: "{{resolve:ssm:/drorchestrator/baseline/cloudformation-role-arn}}"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: SourceArtifacts::pipeline.yaml
                #TemplateConfiguration: SourceArtifacts::pipeline-config.json
              RunOrder: 1

        - Name: Scan-Templates
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: Scan_Templates
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: "{{resolve:ssm:/drorchestrator/baseline/codebuild-scan-templates}}"
              RunOrder: 1

        - Name: Build-Lambda-Packages
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: Package_Lambda
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: "{{resolve:ssm:/drorchestrator/baseline/cocdebuild-package-lambda}}"
              OutputArtifacts:
                - Name: Lambda-Packages
              RunOrder: 1

        # - Name: Copy-Build-Artifacts-to-S3
        #   Actions:
        #     - InputArtifacts:
        #         - Name: Lambda-Packages
        #       Name: Deploy_Files
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Version: "1"
        #         Provider: S3
        #       Configuration:
        #         BucketName: "{{resolve:ssm:/drorchestrator/baseline/bucket}}"
        #         Extract: true
        #         ObjectKey: !Sub "buildArtifacts"
        #         CannedACL: bucket-owner-full-control
        #       RunOrder: 1

        - Name: Deploy-DR-Orchestrator
          Actions:
            - Name: ApprovalWorkflow
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
              - Name: ApprovalWorkflowStackOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: "dr-orchestrator-approval-workflow"
                RoleArn: "{{resolve:ssm:/drorchestrator/baseline/cloudformation-role-arn}}"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: SourceArtifacts::src/dr-orchestrator/Approval-Workflow.yaml
                ParameterOverrides: |
                  {
                    "ApproversEmail":"ajsivsan@amazon.com"
                  }
                OutputFileName: approvals.json
              RunOrder: 1

            - Name: Utilities
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
              - Name: UtilsStackOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: "dr-orchestrator-utils"
                RoleArn: "{{resolve:ssm:/drorchestrator/baseline/cloudformation-role-arn}}"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: SourceArtifacts::src/dr-orchestrator/Utility-Functions.yaml
                ParameterOverrides: |
                  {
                    "TargetAccountsAssumeRoleName":"/drorchestrator/baseline/target-execution-role",
                    "OrgId": "/drorchestrator/baseline/orgid",
                    "Bucket": "dr-orchestrator-baseline-cicdbucket-lspzeqe7yea4"
                  }
                OutputFileName: utils.json
              RunOrder: 1

            - Name: ModuleFactory
              InputArtifacts:
                - Name: SourceArtifacts
                - Name: UtilsStackOutput
                - Name: Lambda-Packages
              OutputArtifacts:
              - Name: ModuleFactoryStackOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: "dr-orchestrator-modulefactory"
                RoleArn: "{{resolve:ssm:/drorchestrator/baseline/cloudformation-role-arn}}"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: SourceArtifacts::src/dr-orchestrator/ModuleFactory.yaml
                ParameterOverrides: |
                  {
                    "LambdaSendTaskTokenArn":  { "Fn::GetParam" : ["UtilsStackOutput", "utils.json", "LambdaSendTaskTokenArn"]},
                    "LambdaSendTaskTokenName": { "Fn::GetParam" : ["UtilsStackOutput", "utils.json", "LambdaSendTaskTokenName"]},
                    "IAMModulesLambdaExecutionRoleArn": { "Fn::GetParam" : ["UtilsStackOutput", "utils.json", "IAMModulesLambdaExecutionRoleArn"]},
                    "TargetAccountsAssumeRoleName": "/drorchestrator/baseline/target-execution-role",
                    "S3CodeBucketName": { "Fn::GetArtifactAtt": ["Lambda-Packages", "BucketName"]},
                    "ModuleFactoryLambdaFunctionKey": { "Fn::GetArtifactAtt": ["Lambda-Packages", "ObjectKey"]}
                  }
                OutputFileName: modulefactory.json
              RunOrder: 2

            - Name: LifeCycleOrchestrator
              InputArtifacts:
                - Name: SourceArtifacts
                - Name: UtilsStackOutput
                - Name: ModuleFactoryStackOutput
              OutputArtifacts:
              - Name: LifeCycleOrchestratorStackOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: "dr-orchestrator-lifecycle"
                RoleArn: "{{resolve:ssm:/drorchestrator/baseline/cloudformation-role-arn}}"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: SourceArtifacts::src/dr-orchestrator/Lifecycle-Orchestrator.yaml
                ParameterOverrides: |
                  {
                    "LambdaSendTaskTokenArn":{ "Fn::GetParam" : ["UtilsStackOutput", "utils.json", "LambdaSendTaskTokenArn"]},
                    "LambdaSendTaskTokenName":{ "Fn::GetParam" : ["UtilsStackOutput", "utils.json", "LambdaSendTaskTokenName"]},
                    "StepFunctionModuleFactoryArn":{ "Fn::GetParam" : ["ModuleFactoryStackOutput", "modulefactory.json", "StepFunctionForModuleFactoryArn"]}
                  }
                OutputFileName: lifecycle.json
              RunOrder: 3

            - Name: DR-Orchestrator
              InputArtifacts:
                - Name: SourceArtifacts
                - Name: ApprovalWorkflowStackOutput
                - Name: LifeCycleOrchestratorStackOutput
              OutputArtifacts:
              - Name: OrchestratorStackOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: "dr-orchestrator"
                RoleArn: "{{resolve:ssm:/drorchestrator/baseline/cloudformation-role-arn}}"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: SourceArtifacts::src/dr-orchestrator/DR-Orchestrator.yaml
                ParameterOverrides: |
                  {
                    "S3CodeBucketName":{ "Fn::GetArtifactAtt": ["SourceArtifacts", "BucketName"]},
                    "StepFunctionLifecycleOrchestrateArn":{ "Fn::GetParam" : ["LifeCycleOrchestratorStackOutput", "lifecycle.json", "StepFunctionOrchestrateLifecycleArn"]},
                    "LambdaRequestApprovalArn":{ "Fn::GetParam" : ["ApprovalWorkflowStackOutput", "approvals.json", "LambdaRequestApprovalArn"]}
                  }
              RunOrder: 4