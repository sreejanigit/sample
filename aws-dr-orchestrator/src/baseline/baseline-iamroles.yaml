Description: Baseline resources for the DR Orchestrator
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  CodePipelineServiceRoleName:
    Description: Name for the CodePipeline service role
    Type: String
    Default: DR-Orchestrator-CodePipelineServiceRole
  CloudFormationCodePipelineRoleName:
    Description: Name for the Cloudformation execution role
    Type: String
    Default: DR-Orchestrator-CFCodePipelineRole
  CICDBucketArn:
    Description: ARN of the CICD Bucket
    Type: String
    Default: /drorchestrator/baseline/bucket-arn
  CodePipelineKMSKeyArn:
    Description: ARN of the KMS key
    Type: String
    Default: /drorchestrator/baseline/kms-arn
  # Tagging parameters
  Tag1:
    Description: Environment
    Type: String
    Default: "Value1"
  Tag2:
    Description: Name of the team that owns the template
    Type: String
    Default: 'Value2'
  Tag3:
    Description: Email ID of the owning team
    Type: String
    Default: 'Value3'

Resources:
  CodePipelineManageStepsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref CodePipelineServiceRoleName
      Description: CodePipeline role for moving objects through the build and deploy stages.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineManageS3Artifacts
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource: !Sub "arn:aws:codecommit:*:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Sub "{{resolve:ssm:${CICDBucketArn}}}"
                  - !Sub "{{resolve:ssm:${CICDBucketArn}}}/*"
        - PolicyName: codepipeline-codecommit
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGetProjects
                  - codebuild:BatchGetBuilds
                  - codebuild:ListBuildsForProject
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*"

              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/${CloudFormationCodePipelineRoleName}"

              - Effect: Allow
                Action:
                  - cloudformation:CancelUpdateStack
                  - cloudformation:ContinueUpdateRollback
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:CreateStackInstances
                  - cloudformation:CreateStackSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DeleteStackInstances
                  - cloudformation:DeleteStackSet
                  - cloudformation:Describe*
                  - cloudformation:List*
                  - cloudformation:RollbackStack
                  - cloudformation:SetStackPolicy
                  - cloudformation:TagResource
                  - cloudformation:UntagResource
                  - cloudformation:UpdateStack
                  - cloudformation:UpdateStackInstances
                  - cloudformation:UpdateStackSet
                  - cloudformation:UpdateTerminationProtection
                  - cloudformation:ValidateTemplate
                  - cloudformation:TagResource
                Resource:
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/*"
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stackset/*"

              - Effect: Allow
                Action:
                  - codebuild:ListBuilds
                  - codebuild:ListProjects
                  - codebuild:ListCuratedEnvironmentImages
                  - codebuild:ListSourceCredentials
                Resource:  !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*"

              - Action:
                  - 'kms:Encrypt'
                  - 'kms:Decrypt'
                  - 'kms:ReEncrypt*'
                  - 'kms:GenerateDataKey*'
                  - 'kms:DescribeKey'
                Resource:
                  - !Sub '{{resolve:ssm:${CodePipelineKMSKeyArn}}}'
                Effect: Allow

              - Action:
                  - 'sns:*'
                  - 'apigateway:*'
                  - 'lambda:*'
                  - 'states:*'
                  - 'iam:*'
                Resource: '*'
                Effect: Allow

      Tags:
        - Key: Tag1
          Value: !Ref Tag1
        - Key: Tag2
          Value: !Ref Tag2
        - Key: Tag3
          Value: !Ref Tag3

  CloudFormationCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref  CloudFormationCodePipelineRoleName
      Description: Role assumed by CloudFormation for deploying resources, used by CodePipeline.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: IamAccess
                Effect: Allow
                Action:
                  - "iam:AddRoleToInstanceProfile"
                  - "iam:ListRolePolicies"
                  - "iam:ListPolicies"
                  - "iam:DeleteRole"
                  - "iam:GetRole"
                  - "iam:PassRole"
                  - "iam:ListRoles"
                  - "iam:CreateRole"
                  - "iam:getRolePolicy"
                  - "iam:PutRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:AttachRolePolicy"
                  - "iam:DeleteRolePolicy"
                  - "iam:UntagRole"
                  - "iam:TagRole"
                  - "iam:TagUser"
                  - "iam:UntagUser"
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:policy/*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/*"

              - Sid: CodePipelineAccess
                Effect: Allow
                Action:
                  - "codepipeline:CreatePipeline"
                  - "codepipeline:UpdatePipeline"
                  - "codepipeline:DeletePipeline"
                  - "codepipeline:Get*"
                  - "codepipeline:List*"
                  - "codepipeline:TagResource"
                  - "codepipeline:UnTagResource"
                  - "codepipeline:UpdateActionType"
                  - "codepipeline:StartPipelineExecution"
                  - "codepipeline:PutActionRevision"
                  - "codepipeline:DisableStageTransition"
                  - "codepipeline:EnableStageTransition"
                Resource: !Sub "arn:aws:codepipeline:*:${AWS::AccountId}:*"

              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/${CloudFormationCodePipelineRoleName}"
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/${CodePipelineServiceRoleName}"

              - Effect: Allow
                Action:
                  - "organizations:ListDelegatedAdministrators"
                Resource: '*'

              - Effect: Allow
                Action:
                  - cloudformation:CancelUpdateStack
                  - cloudformation:ContinueUpdateRollback
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:Describe*
                  - cloudformation:List*
                  - cloudformation:RollbackStack
                  - cloudformation:SetStackPolicy
                  - cloudformation:TagResource
                  - cloudformation:UntagResource
                  - cloudformation:UpdateStack
                  - cloudformation:UpdateTerminationProtection
                  - cloudformation:ValidateTemplate
                Resource: "*"

              - Effect: Allow
                Action:
                  - cloudformation:CreateStackInstances
                  - cloudformation:CreateStackSet
                  - cloudformation:DeleteStackInstances
                  - cloudformation:DeleteStackSet
                  - cloudformation:Describe*
                  - cloudformation:List*
                  - cloudformation:RollbackStack
                  - cloudformation:TagResource
                  - cloudformation:UntagResource
                  - cloudformation:UpdateStackInstances
                  - cloudformation:UpdateStackSet
                  - cloudformation:ValidateTemplate
                Resource: "*"

              - Effect: Allow
                Action:
                  - cloudformation:GetTemplateSummary
                  - "s3:GetObject"
                Resource: '*'

              - Effect: Allow
                Action:
                  - "ssm:List*"
                  - "ssm:Get*"
                  - "ssm:PutParameter"
                  - "ssm:DeleteParameter"
                Resource: !Sub "arn:aws:ssm:*:${AWS::AccountId}:parameter/*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource:
                  - !Sub "{{resolve:ssm:${CICDBucketArn}}}"
              - Action:
                  - 'kms:Encrypt'
                  - 'kms:Decrypt'
                  - 'kms:ReEncrypt*'
                  - 'kms:GenerateDataKey*'
                  - 'kms:DescribeKey'
                Resource:
                  - !Sub "{{resolve:ssm:${CodePipelineKMSKeyArn}}}"
                Effect: Allow
      Tags:
        - Key: Tag1
          Value: !Ref Tag1
        - Key: Tag2
          Value: !Ref Tag2
        - Key: Tag3
          Value: !Ref Tag3

  SSMParameterSolutionCodePipelineRoleArn:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/code-pipeline-role-arn"
      Type: String
      Value: !GetAtt CodePipelineManageStepsRole.Arn
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterSolutionCloudformationRoleArn:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/cloudformation-role-arn"
      Type: String
      Value: !GetAtt CloudFormationCodePipelineRole.Arn
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

Outputs:
  CodePipelineStepsRoleOutput:
    Value: !GetAtt CodePipelineManageStepsRole.Arn
    Description: "Code Pipeline Role Arn"
    Export:
      Name: "dr-orchestrator-pipeline-role-arn"

  CloudFormationRole:
    Value: !GetAtt CloudFormationCodePipelineRole.Arn
    Description: "Cloudformation Role Arn"
    Export:
      Name: "dr-orchestrator-cloudformation-role-arn"