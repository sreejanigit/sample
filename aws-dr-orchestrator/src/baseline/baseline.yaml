---
Description: Baseline resources for the DR Orchestrator
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  CodePipelineServiceRoleName:
    Description: Name for the CodePipeline service role
    Type: String
    Default: DR-Orchestrator-CodePipelineServiceRole
  CloudFormationCodePipelineRoleName:
    Description: Name for the Cloudformation execution role
    Type: String
    Default: DR-Orchestrator-CFCodePipelineRole
  OrgId:
    Type: String
    Description: Organization ID
    Default: o-38z7gey680
  ApproverEmail:
    Type: String
    Description: Email id of the approver
    Default: ajsivsan@amazon.com
  TargetAccountsAssumeRoleName:
    Type: String
    Description: Role used to assume into the target account
    Default: aws-dr-orchestrator-execution-role
  # Tagging parameters
  Tag1:
    Description: Environment
    Type: String
    Default: "Value1"
  Tag2:
    Description: Name of the team that owns the template
    Type: String
    Default: 'Value2'
  Tag3:
    Description: Email ID of the owning team
    Type: String
    Default: 'Value3'

Resources:
  CICDBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref CodePipelineKMSKey
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref CICDBucketLogging
      Tags:
        - Key: Tag1
          Value: !Ref Tag1
        - Key: Tag2
          Value: !Ref Tag2
        - Key: Tag3
          Value: !Ref Tag3

  CICDBucketLogging:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref CodePipelineKMSKey
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Tag1
          Value: !Ref Tag1
        - Key: Tag2
          Value: !Ref Tag2
        - Key: Tag3
          Value: !Ref Tag3

  CICDLoggingBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: Retain
    Properties:
      Bucket: !Ref CICDBucketLogging
      PolicyDocument:
        Version: '2012-10-17'
        Id: SSEAndSSLPolicy
        Statement:
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource:
              - !Join
                - ''
                - - Fn::GetAtt: [CICDBucketLogging, Arn]
                  - '/*'
            Condition:
              Bool:
                aws:SecureTransport: 'false'

          - Sid: DenyS3PublicObjectACL
            Effect: Deny
            Principal: "*"
            Action: s3:PutObjectAcl
            Resource:
              - !Join
                - ''
                - - Fn::GetAtt: [CICDBucketLogging, Arn]
                  - '/*'
            Condition:
              StringEqualsIgnoreCaseIfExists:
                s3:x-amz-acl:
                  - public-read
                  - public-read-write
                  - authenticated-read

  CICDBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: Retain
    Properties:
      Bucket: !Ref CICDBucket
      PolicyDocument:
        Version: '2012-10-17'
        Id: SSEAndSSLPolicy
        Statement:
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource:
              - !Join
                - ''
                - - Fn::GetAtt: [CICDBucket, Arn]
                  - '/*'
            Condition:
              Bool:
                aws:SecureTransport: 'false'

          - Sid: DenyS3PublicObjectACL
            Effect: Deny
            Principal: "*"
            Action: s3:PutObjectAcl
            Resource:
              - !Join
                - ''
                - - Fn::GetAtt: [CICDBucket, Arn]
                  - '/*'
            Condition:
              StringEqualsIgnoreCaseIfExists:
                s3:x-amz-acl:
                  - public-read
                  - public-read-write
                  - authenticated-read

  CodePipelineKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "Built for DR Orchestratorencrypt and decrypt pipeline artifacts and other data"
      Enabled: true
      EnableKeyRotation: True
      KeyPolicy:
        Version: '2012-10-17'
        Id: "key-default-1"
        Statement:
          -
            Sid: "Enable IAM User Permissions"
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'
      Tags:
        - Key: Tag1
          Value: !Ref Tag1
        - Key: Tag2
          Value: !Ref Tag2
        - Key: Tag3
          Value: !Ref Tag3

  CreateAMIKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: "alias/dr-orchestrator-kms-alias"
      TargetKeyId: !Ref CodePipelineKMSKey

  SSMParameterSolutionBucket:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/bucket"
      Type: String
      Value: !Ref CICDBucket
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterBucketArn:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/bucket-arn"
      Type: String
      Value: !GetAtt CICDBucket.Arn
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterSolutionKMSArn:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/kms-arn"
      Type: String
      Value: !GetAtt CodePipelineKMSKey.Arn
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterSolutionKMSId:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/kms-id"
      Type: String
      Value: !Ref CodePipelineKMSKey
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterSolutionCodePipelineRoleName:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/code-pipeline-role-name"
      Type: String
      Value: !Ref CodePipelineServiceRoleName
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterSolutionCloudformationRoleName:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "DR Orchestratorsolution bucket shared with AWS Organization"
      Name: "/drorchestrator/baseline/cloudformation-role-name"
      Type: String
      Value: !Ref CloudFormationCodePipelineRoleName
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterSolutionOrgId:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "AWS Organization ID"
      Name: "/drorchestrator/baseline/orgid"
      Type: String
      Value: !Ref OrgId
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

  SSMParameterSolutionEmail:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Email id of the approver"
      Name: "/drorchestrator/baseline/approvalemail"
      Type: String
      Value: !Ref ApproverEmail
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3
  
  SSMTargetAccountsAssumeRoleName:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Email id of the approver"
      Name: "/drorchestrator/baseline/target-execution-role"
      Type: String
      Value: !Ref TargetAccountsAssumeRoleName
      Tags:
        Tag1: !Ref Tag1
        Tag2: !Ref Tag2
        Tag3: !Ref Tag3

Outputs:
  ServiceCatalogS3BucketName:
    Value: !Ref CICDBucket
    Description: "S3 Bucket Name for Service Catalog"
    Export:
      Name: "dr-orchestrator-s3-name"

  ServiceCatalogS3BucketArn:
    Value: !GetAtt CICDBucket.Arn
    Description: "S3 Bucket Arn for Service Catalog"
    Export:
      Name: "dr-orchestrator-s3-arn"

  CreateAMIKmsKeyArn:
    Value: !GetAtt CodePipelineKMSKey.Arn
    Description: "KMS Key Arn for Delivery Pipeline"
    Export:
      Name: "dr-orchestrator-kms-arn"

  CreateAMIKmsKeyID:
    Value: !Ref CodePipelineKMSKey
    Description: "KMS Key ID for Delivery Pipeline"
    Export:
      Name: "dr-orchestrator-kms-id"

